{"name":"Pastebin-js","tagline":"NodeJS module for Pastebin API","body":"pastebin-js\r\n===========\r\n\r\nNodeJS module to access the Pastebin API\r\n\r\n```js\r\nvar PastebinAPI = require('pastebin-js'),\r\n    pastebin = new PastebinAPI('devkey');\r\n```\r\n\r\n\r\n## Features\r\n\r\n* getPaste : get a raw paste\r\n* createAPIuserKey : get a userkey for the authenticated user\r\n* listUserPastes : get a list of the pastes from the authenticated user\r\n* getUserInfo : get a list of info from the authenticated user\r\n* listTrendingPastes : get a list of the trending pastes on Pastebin\r\n* createPaste : create a paste\r\n* createPasteFromFile : read a file (UTF8) and paste it\r\n* deletePaste : delete a paste created by the user\r\n\r\n## Example\r\n\r\n```js\r\nvar PastebinAPI = require('./index'),\r\n    pastebin = new PastebinAPI({\r\n      'api_dev_key' : 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',\r\n      'api_user_name' : 'PastebinUserName',\r\n      'api_user_password' : 'PastebinPassword'\r\n    });\r\n\r\npastebin\r\n    .createPasteFromFile(\"./uploadthistopastebin.txt\", \"pastebin-js test\", null, 1, \"N\")\r\n    .then(function (data) {\r\n        // we have succesfully pasted it. Data contains the url\r\n        console.log(data);\r\n    })\r\n    .fail(function (err) {\r\n        console.log(err);\r\n    });\r\n```\r\n\r\n## API\r\n\r\n**PastebinAPI()** : Constructor.\r\n\r\n```js\r\nvar PastebinAPI = require('./index');\r\n\r\n// Without any parameter you can only use getPaste!\r\nvar pastebin = new PastebinAPI();\r\n\r\n// Provide a developer key as string, this key can be found when logged in.\r\n// This can be found here: http://pastebin.com/api#1\r\nvar pastebin = new PastebinAPI('xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx');\r\n\r\n// Provide an object containing the api_dev_key, api_user_name and api_user_password\r\npastebin = new PastebinAPI({\r\n                'api_dev_key' : 'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx',\r\n                'api_user_name' : 'PastebinUserName',\r\n                'api_user_password' : 'PastebinPassword'\r\n               }); \r\n```\r\n\r\n### Methods\r\n\r\n**pastebin.getPaste(pasteID)** : get a raw paste, providing the ``pasteID``\r\n\r\n```js\r\npastebin\r\n  .getPaste('76b2yNRt')\r\n  .then(function (data) {\r\n    // data contains the raw paste\r\n    console.log(data);\r\n  })\r\n  .fail(function (err) {\r\n    // Something went wrong\r\n    console.log(err);\r\n  })\r\n```\r\n\r\n**pastebin.createPaste(text, title, format, privacy, expiration)** : creates a paste. ``text`` is required, other\r\narguments are optional. For ``format``, ``privacy`` and ``expiration``, have a look at **lib/config.js** for the allowed input.\r\nIf ``privacy`` is set to **2**, you will need to provide a username && password in the constructor (Pastebin requires a api_user_key)\r\n\r\n```js\r\npastebin\r\n  .createPaste(\"Test from pastebin-js\", \"pastebin-js\")\r\n  .then(function (data) {\r\n    // paste succesfully created, data contains the paste url\r\n    console.log(data);\r\n  })\r\n  .fail(function (err) {\r\n    // Something went wrong\r\n    console.log(err);\r\n  })\r\n```\r\n\r\n**pastebin.createPasteFromFile(filename, title, format, privacy, expiration)** : tries to read the file provided in ``filename``\r\n(UTF-8) and paste it. Works the same as previous method.\r\n\r\n**pastebin.deletePaste(pasteID)** : Tries to delete a paste, created by the user\r\n\r\n**pastebin.getUserInfo()** : gets the userinfo \r\n\r\n**pastebin.listUserPastes(limit)** : gets a list of pastes from the user. ``limit`` is optional, from 1 - 100 (default: 50)\r\n\r\n**pastebin.listTrendingPastes()** : gets a list of trending pastes on Pastebin\r\n\r\n\r\n## Bugs / issues\r\n\r\nPlease, if you find any bugs, or are a way better developer than I am (as in, you are thinking 'spaghetti' when looking at my\r\ncode), feel free to create an issue or provide me with some pull requests! This is my first full module ever written for\r\nNodeJS.\r\n\r\n## License\r\n\r\nCopyright (c) 2013-2013 J.W. Lagendijk &lt;jwlagendijk@gmail.com&gt;\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}